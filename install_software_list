#!/bin/bash
# ###########################################################
# Script to install software from a list using aptitude. 
# This is free and open software. 
# ###########################################################
# 
# First argument: <soft_file> points to file where each line 
#                 is the name of a piece of software to install.
#
# Second argument: <repos_file> if provided, points to a file
#                   where each line is the address of a repository
#                   to add using add-apt-repository. e.g.
#                  "deb http://us.archive.ubuntu.com/ubuntu/ saucy universe multiverse" 
#
# If software from Canonical partners is to be installed, these
# repositories must be enabled in /etc/apt/sources.list
#
# Script produces installation logs in ./install_logs/
#
# ./install_logs/success.log : lists all successfully installed packages 
# ./install_logs/fails.log   : lists all installations that returned non-zero error 
#
# ###########################################################
# Obtain current effective user ID. Script must be run as root.
CURRENT_EUID=$(id --user)

# Quit if the script is not being run by root.
if [ "$CURRENT_EUID" -ne 0 ]; then
    echo "$0 must be run as root. Example: sudo $0"
    exit 1
fi

# ###########################################################
show_usage ()
{
  printf "
Usage: %s  [software to install (file)] [optional: repositories to add (file)]  \n
" $(basename $0) >&2
  exit 1
}

# ###########################################################
while getopts 'h?' OPTION
do
  case $OPTION in
  h)    show_usage
        ;;
  ?)    show_usage
        ;;
  esac
done

# ###########################################################
# Check that at least one argument provided 
if [ "$#" -lt 1 ]; then
    echo "Need at least one argument: SOFT_FILE (optional: REPOS_FILE)."
    exit 1
fi

# ###########################################################
# Add repositories if repos_file is given
if [ "$#" -eq 2 ]; then
    echo "Adding repositories from file: $2..."
    REPOS_FILE=$2

    success=0
    while IFS='' read -r line || [[ -n "$line" ]]; do
        add-apt-repository "$line"
        if [[ $? > 0 ]]
        then
            echo "Failed to add repository: $line" 
        else
            echo "Added repo: $line"
            success=1
        fi
    done < "$REPOS_FILE"
    if [ $success -eq 1 ]
    then    
        echo "...echo updating aptitude..."
        apt-get update
    fi
    printf "Done adding repositories.\n\n"
fi


# ###########################################################
# Install software
SOFT_FILE=$1
echo "Adding software listed in: $SOFT_FILE..."

mkdir install_logs -p 

sucf="install_logs/success.log"
failf="install_logs/fail.log"

while IFS='' read -r line || [[ -n "$line" ]]; do

    logf="install_logs/$line.log" 
    apt-get install --assume-yes $line &>> $logf

    if [[ $? > 0 ]]
    then
        echo "Failed to install: $line" 
        echo $line >> $failf
    else
        echo "Successfully installed: $line"
        echo $line >> $sucf
    fi
done < "$SOFT_FILE"

printf "Done installing software. Check logs in ./install_logs.\n\n"
